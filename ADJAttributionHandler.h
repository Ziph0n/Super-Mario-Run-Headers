/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 16, 2016 at 1:28:32 PM Central European Standard Time
* Operating System: Version 9.3.2 (Build 13F69)
* Image Source: /var/containers/Bundle/Application/DF2FE387-EFC2-4765-9E85-C2CDC49533B4/rb_12_01_16:02:52.app/Super Mario Run
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Super Mario Run/ADJAttributionHandler.h>

@protocol ADJAttributionHandler
@required
-(void)checkSessionResponse:(id)arg1;
-(void)getAttribution;
-(void)pauseSending;
-(void)resumeSending;
-(id)initWithActivityHandler:(id)arg1 withAttributionPackage:(id)arg2 startsSending:(BOOL)arg3 hasAttributionChangedDelegate:(BOOL)arg4;
-(void)checkAttributionResponse:(id)arg1;
-(void)teardown;

@end


@protocol OS_dispatch_queue, ADJActivityHandler, ADJLogger;
@class NSObject, ADJTimerOnce, ADJActivityPackage;

@interface ADJAttributionHandler : NSObject <ADJAttributionHandler> {

	BOOL _paused;
	BOOL _hasNeedsResponseDelegate;
	NSObject*<OS_dispatch_queue> _internalQueue;
	id<ADJActivityHandler> _activityHandler;
	id<ADJLogger> _logger;
	ADJTimerOnce* _attributionTimer;
	ADJActivityPackage* _attributionPackage;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> internalQueue;                 //@synthesize internalQueue=_internalQueue - In the implementation block
@property (assign,nonatomic,__weak) id<ADJActivityHandler> activityHandler;              //@synthesize activityHandler=_activityHandler - In the implementation block
@property (assign,nonatomic,__weak) id<ADJLogger> logger;                                //@synthesize logger=_logger - In the implementation block
@property (nonatomic,retain) ADJTimerOnce * attributionTimer;                            //@synthesize attributionTimer=_attributionTimer - In the implementation block
@property (nonatomic,retain) ADJActivityPackage * attributionPackage;                    //@synthesize attributionPackage=_attributionPackage - In the implementation block
@property (assign,nonatomic) BOOL paused;                                                //@synthesize paused=_paused - In the implementation block
@property (assign,nonatomic) BOOL hasNeedsResponseDelegate;                              //@synthesize hasNeedsResponseDelegate=_hasNeedsResponseDelegate - In the implementation block
+(id)handlerWithActivityHandler:(id)arg1 withAttributionPackage:(id)arg2 startsSending:(BOOL)arg3 hasAttributionChangedDelegate:(BOOL)arg4 ;
-(void)checkSessionResponse:(id)arg1 ;
-(void)getAttribution;
-(void)pauseSending;
-(void)resumeSending;
-(id)initWithActivityHandler:(id)arg1 withAttributionPackage:(id)arg2 startsSending:(BOOL)arg3 hasAttributionChangedDelegate:(BOOL)arg4 ;
-(void)setAttributionPackage:(ADJActivityPackage *)arg1 ;
-(void)setHasNeedsResponseDelegate:(BOOL)arg1 ;
-(void)requestAttributionI:(id)arg1 ;
-(void)setAttributionTimer:(ADJTimerOnce *)arg1 ;
-(void)checkSessionResponseI:(id)arg1 sessionResponseData:(id)arg2 ;
-(void)checkAttributionResponseI:(id)arg1 attributionResponseData:(id)arg2 ;
-(void)waitRequestAttributionWithDelayI:(id)arg1 milliSecondsDelay:(int)arg2 ;
-(void)checkAttributionI:(id)arg1 responseData:(id)arg2 ;
-(void)checkDeeplinkI:(id)arg1 attributionResponseData:(id)arg2 ;
-(BOOL)hasNeedsResponseDelegate;
-(ADJActivityPackage *)attributionPackage;
-(id)requestI:(id)arg1 ;
-(void)checkAttributionResponse:(id)arg1 ;
-(ADJTimerOnce *)attributionTimer;
-(id)urlI:(id)arg1 ;
-(void)setPaused:(BOOL)arg1 ;
-(BOOL)paused;
-(void)setActivityHandler:(id<ADJActivityHandler>)arg1 ;
-(id<ADJActivityHandler>)activityHandler;
-(id<ADJLogger>)logger;
-(void)setLogger:(id<ADJLogger>)arg1 ;
-(NSObject*<OS_dispatch_queue>)internalQueue;
-(void)teardown;
-(void)setInternalQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
@end

