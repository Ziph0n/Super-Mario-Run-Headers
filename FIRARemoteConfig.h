/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 16, 2016 at 1:28:32 PM Central European Standard Time
* Operating System: Version 9.3.2 (Build 13F69)
* Image Source: /var/containers/Bundle/Application/DF2FE387-EFC2-4765-9E85-C2CDC49533B4/rb_12_01_16:02:52.app/Super Mario Run
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSString, FIRADatabase, FIRMutableDictionary, NSNumberFormatter, ACPMeasurementConfig;

@interface FIRARemoteConfig : NSObject {

	BOOL _isDefaultInstance;
	NSString* _appIDFromGMP;
	FIRADatabase* _database;
	FIRMutableDictionary* _cachedValueByRemoteConfigKeys;
	FIRMutableDictionary* _cachedEventConfigByEventName;
	NSNumberFormatter* _numberFormatter;
	ACPMeasurementConfig* _remoteConfigProto;

}

@property (nonatomic,readonly) double lastRemoteConfigUpdateTimestamp; 
@property (nonatomic,readonly) BOOL isExpired; 
@property (nonatomic,readonly) long long version; 
@property (nonatomic,readonly) int maxAudienceCount; 
@property (nonatomic,readonly) int maxFiltersPerAudience; 
@property (nonatomic,readonly) int maxFilterResultCount; 
@property (nonatomic,readonly) int maxParametersPerFilter; 
@property (nonatomic,readonly) double maxQueueTime; 
@property (nonatomic,readonly) double databaseDeleteStaleBundlesInterval; 
@property (nonatomic,readonly) double adIDCacheTime; 
@property (nonatomic,readonly) double monitoringSamplePeriod; 
@property (nonatomic,readonly) BOOL isNetworkBackgroundSessionEnabled; 
@property (nonatomic,readonly) double networkTimeout; 
@property (nonatomic,readonly) double sessionDefaultMinimumInterval; 
@property (nonatomic,readonly) double sessionDefaultTimeoutInterval; 
@property (nonatomic,readonly) double sessionEventUserEngagementInterval; 
@property (nonatomic,readonly) BOOL uploadWhenAppInBackgroundEnabled; 
@property (nonatomic,readonly) BOOL parsePurchaseDataEnabled; 
@property (nonatomic,readonly) int maxConversionsPerDay; 
@property (nonatomic,readonly) int maxEventsPerDay; 
@property (nonatomic,readonly) int maxPublicEventsPerDay; 
@property (nonatomic,readonly) int maxErrorEventsPerDay; 
@property (nonatomic,readonly) int maxTrackedCurrencies; 
@property (nonatomic,readonly) int maxEventsStored; 
@property (nonatomic,readonly) int maxBundlesCreatedPerIteration; 
@property (nonatomic,readonly) double uploadingBackoffInterval; 
@property (nonatomic,readonly) double uploadingInterval; 
@property (nonatomic,readonly) double uploadingInitialDelayInterval; 
@property (nonatomic,readonly) long long uploadMaxBundlesLimit; 
@property (nonatomic,readonly) long long uploadMaxEventsPerBundle; 
@property (nonatomic,readonly) long long uploadMaxSizeLimitBytes; 
@property (nonatomic,readonly) int uploadingRetryCount; 
@property (nonatomic,readonly) double uploadingRetryInterval; 
@property (nonatomic,readonly) int maxRealtimeEventCountPerDay; 
@property (nonatomic,readonly) double uploadingRealTimeInterval; 
@property (nonatomic,readonly) BOOL blacklistInternal; 
@property (nonatomic,readonly) BOOL blacklistPublic; 
@property (nonatomic,readonly) double remoteConfigCacheTimeInterval; 
+(id)defaultInstance;
-(int)maxAudienceCount;
-(int)maxFilterResultCount;
-(int)maxFiltersPerAudience;
-(int)maxParametersPerFilter;
-(int)maxEventsStored;
-(double)maxQueueTime;
-(double)databaseDeleteStaleBundlesInterval;
-(double)adIDCacheTime;
-(id)initWithGMPAppID:(id)arg1 database:(id)arg2 measurementConfig:(id)arg3 ;
-(BOOL)updateACPMeasurementConfig:(id)arg1 ;
-(id)ACPMeasurementConfigFromDatabase;
-(void)parseRemoteConfigFromMeasurementConfig:(id)arg1 ;
-(id)eventConfigWithName:(id)arg1 ;
-(BOOL)blacklistPublic;
-(BOOL)blacklistInternal;
-(double)lastRemoteConfigUpdateTimestamp;
-(double)remoteConfigCacheTimeInterval;
-(double)timeIntervalInSecondsFromCacheWithKey:(id)arg1 defaultValue:(double)arg2 maxValue:(double)arg3 minValue:(double)arg4 ;
-(int)intValueFromCacheWithKey:(id)arg1 defaultValue:(int)arg2 maxValue:(int)arg3 minValue:(int)arg4 ;
-(long long)int64ValueFromCacheWithKey:(id)arg1 defaultValue:(long long)arg2 maxValue:(long long)arg3 minValue:(long long)arg4 ;
-(id)numberFromCacheWithKey:(id)arg1 defaultValue:(id)arg2 maxValue:(id)arg3 minValue:(id)arg4 block:(/*^block*/id)arg5 ;
-(id)initWithGMPAppID:(id)arg1 database:(id)arg2 ;
-(BOOL)isEventBlacklisted:(id)arg1 ;
-(BOOL)isEventCustomConversion:(id)arg1 ;
-(id)remoteConfigURLWithAppInstanceID:(id)arg1 platform:(id)arg2 GMPVersion:(long long)arg3 ;
-(double)uploadingBackoffInterval;
-(double)monitoringSamplePeriod;
-(BOOL)isNetworkBackgroundSessionEnabled;
-(double)sessionDefaultMinimumInterval;
-(double)sessionDefaultTimeoutInterval;
-(double)sessionEventUserEngagementInterval;
-(BOOL)uploadWhenAppInBackgroundEnabled;
-(BOOL)parsePurchaseDataEnabled;
-(int)maxConversionsPerDay;
-(int)maxEventsPerDay;
-(int)maxPublicEventsPerDay;
-(int)maxErrorEventsPerDay;
-(double)uploadingInterval;
-(double)uploadingInitialDelayInterval;
-(long long)uploadMaxBundlesLimit;
-(long long)uploadMaxEventsPerBundle;
-(long long)uploadMaxSizeLimitBytes;
-(int)uploadingRetryCount;
-(double)uploadingRetryInterval;
-(int)maxBundlesCreatedPerIteration;
-(int)maxRealtimeEventCountPerDay;
-(double)uploadingRealTimeInterval;
-(id)numberFromCacheWithKey:(id)arg1 defaultValue:(id)arg2 maxValue:(id)arg3 minValue:(id)arg4 ;
-(long long)int64ValueFromCacheWithKey:(id)arg1 defaultValue:(long long)arg2 ;
-(int)maxTrackedCurrencies;
-(double)networkTimeout;
-(long long)version;
-(id)numberFromString:(id)arg1 ;
-(BOOL)isExpired;
-(id)cacheValue:(id)arg1 forKey:(id)arg2 ;
@end

