/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 16, 2016 at 1:28:32 PM Central European Standard Time
* Operating System: Version 9.3.2 (Build 13F69)
* Image Source: /var/containers/Bundle/Application/DF2FE387-EFC2-4765-9E85-C2CDC49533B4/rb_12_01_16:02:52.app/Super Mario Run
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Super Mario Run/ADJActivityHandler.h>

@protocol ADJActivityHandler <NSObject>
@required
-(void)trackEvent:(id)arg1;
-(void)setDeviceToken:(id)arg1;
-(void)sendFirstPackages;
-(void)addSessionPartnerParameter:(id)arg1 value:(id)arg2;
-(void)addSessionCallbackParameter:(id)arg1 value:(id)arg2;
-(void)removeSessionPartnerParameter:(id)arg1;
-(void)removeSessionCallbackParameter:(id)arg1;
-(void)resetSessionPartnerParameters;
-(void)resetSessionCallbackParameters;
-(id)initWithConfig:(id)arg1 sessionParametersActionsArray:(id)arg2;
-(void)launchEventResponseTasks:(id)arg1;
-(void)setAskingAttribution:(BOOL)arg1;
-(void)teardown:(BOOL)arg1;
-(BOOL)updateAttributionI:(id)arg1 attribution:(id)arg2;
-(void)finishedTracking:(id)arg1;
-(void)launchSessionResponseTasks:(id)arg1;
-(void)launchAttributionResponseTasks:(id)arg1;
-(void)appWillOpenUrl:(id)arg1;
-(void)setIadDate:(id)arg1 withPurchaseDate:(id)arg2;
-(void)setIadDetails:(id)arg1 error:(id)arg2 retriesLeft:(int)arg3;
-(void)setEnabled:(BOOL)arg1;
-(BOOL)isEnabled;
-(void)applicationDidBecomeActive;
-(void)applicationWillResignActive;
-(void)setAttribution:(id)arg1;
-(void)setOfflineMode:(BOOL)arg1;
-(id)internalState;

@end


@protocol OS_dispatch_queue, ADJPackageHandler, ADJAttributionHandler, ADJSdkClickHandler, ADJLogger, AdjustDelegate;
@class NSObject, ADJActivityState, ADJTimerCycle, ADJTimerOnce, ADJInternalState, ADJDeviceInfo, ADJSessionParameters, ADJAttribution, ADJConfig, NSString;

@interface ADJActivityHandler : NSObject <ADJActivityHandler> {

	NSObject*<OS_dispatch_queue> _internalQueue;
	id<ADJPackageHandler> _packageHandler;
	id<ADJAttributionHandler> _attributionHandler;
	id<ADJSdkClickHandler> _sdkClickHandler;
	ADJActivityState* _activityState;
	ADJTimerCycle* _foregroundTimer;
	ADJTimerOnce* _backgroundTimer;
	ADJInternalState* _internalState;
	ADJDeviceInfo* _deviceInfo;
	ADJTimerOnce* _delayStartTimer;
	ADJSessionParameters* _sessionParameters;
	id<ADJLogger> _logger;
	NSObject*<AdjustDelegate> _adjustDelegate;
	ADJAttribution* _attribution;
	ADJConfig* _adjustConfig;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> internalQueue;                   //@synthesize internalQueue=_internalQueue - In the implementation block
@property (nonatomic,retain) id<ADJPackageHandler> packageHandler;                         //@synthesize packageHandler=_packageHandler - In the implementation block
@property (nonatomic,retain) id<ADJAttributionHandler> attributionHandler;                 //@synthesize attributionHandler=_attributionHandler - In the implementation block
@property (nonatomic,retain) id<ADJSdkClickHandler> sdkClickHandler;                       //@synthesize sdkClickHandler=_sdkClickHandler - In the implementation block
@property (nonatomic,retain) ADJActivityState * activityState;                             //@synthesize activityState=_activityState - In the implementation block
@property (nonatomic,retain) ADJTimerCycle * foregroundTimer;                              //@synthesize foregroundTimer=_foregroundTimer - In the implementation block
@property (nonatomic,retain) ADJTimerOnce * backgroundTimer;                               //@synthesize backgroundTimer=_backgroundTimer - In the implementation block
@property (nonatomic,retain) ADJInternalState * internalState;                             //@synthesize internalState=_internalState - In the implementation block
@property (nonatomic,retain) ADJDeviceInfo * deviceInfo;                                   //@synthesize deviceInfo=_deviceInfo - In the implementation block
@property (nonatomic,retain) ADJTimerOnce * delayStartTimer;                               //@synthesize delayStartTimer=_delayStartTimer - In the implementation block
@property (nonatomic,retain) ADJSessionParameters * sessionParameters;                     //@synthesize sessionParameters=_sessionParameters - In the implementation block
@property (assign,nonatomic,__weak) id<ADJLogger> logger;                                  //@synthesize logger=_logger - In the implementation block
@property (assign,nonatomic,__weak) NSObject*<AdjustDelegate> adjustDelegate;              //@synthesize adjustDelegate=_adjustDelegate - In the implementation block
@property (nonatomic,copy) ADJAttribution * attribution;                                   //@synthesize attribution=_attribution - In the implementation block
@property (nonatomic,copy) ADJConfig * adjustConfig;                                       //@synthesize adjustConfig=_adjustConfig - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)handlerWithConfig:(id)arg1 sessionParametersActionsArray:(id)arg2 ;
-(void)trackEvent:(id)arg1 ;
-(void)setDeviceToken:(id)arg1 ;
-(void)sendFirstPackages;
-(void)addSessionPartnerParameter:(id)arg1 value:(id)arg2 ;
-(void)addSessionCallbackParameter:(id)arg1 value:(id)arg2 ;
-(void)removeSessionPartnerParameter:(id)arg1 ;
-(void)removeSessionCallbackParameter:(id)arg1 ;
-(void)resetSessionPartnerParameters;
-(void)resetSessionCallbackParameters;
-(id)initWithConfig:(id)arg1 sessionParametersActionsArray:(id)arg2 ;
-(void)setAdjustConfig:(ADJConfig *)arg1 ;
-(void)setAdjustDelegate:(NSObject*<AdjustDelegate>)arg1 ;
-(void)readAttribution;
-(void)readActivityState;
-(void)initI:(id)arg1 sessionParametersActionsArray:(id)arg2 ;
-(void)addNotificationObserver;
-(void)delayStartI:(id)arg1 ;
-(void)stopBackgroundTimerI:(id)arg1 ;
-(void)startForegroundTimerI:(id)arg1 ;
-(void)startI:(id)arg1 ;
-(void)stopForegroundTimerI:(id)arg1 ;
-(void)startBackgroundTimerI:(id)arg1 ;
-(void)endI:(id)arg1 ;
-(void)eventI:(id)arg1 event:(id)arg2 ;
-(id<ADJAttributionHandler>)attributionHandler;
-(void)launchEventResponseTasks:(id)arg1 ;
-(void)launchEventResponseTasksI:(id)arg1 eventResponseData:(id)arg2 ;
-(void)launchSessionResponseTasksI:(id)arg1 sessionResponseData:(id)arg2 ;
-(void)launchAttributionResponseTasksI:(id)arg1 attributionResponseData:(id)arg2 ;
-(BOOL)hasChangedState:(BOOL)arg1 nextState:(BOOL)arg2 trueMessage:(id)arg3 falseMessage:(id)arg4 ;
-(void)updateState:(BOOL)arg1 pausingMessage:(id)arg2 remainsPausedMessage:(id)arg3 unPausingMessage:(id)arg4 ;
-(void)writeActivityStateS:(id)arg1 changesInStateBlock:(/*^block*/id)arg2 ;
-(BOOL)isEnabledI:(id)arg1 ;
-(BOOL)pausedI:(id)arg1 sdkClickHandlerOnly:(BOOL)arg2 ;
-(void)updateHandlersStatusAndSend;
-(void)appWillOpenUrlI:(id)arg1 url:(id)arg2 ;
-(void)setDeviceTokenI:(id)arg1 deviceToken:(id)arg2 ;
-(ADJConfig *)adjustConfig;
-(id<ADJSdkClickHandler>)sdkClickHandler;
-(void)setAskingAttribution:(BOOL)arg1 ;
-(void)updateHandlersStatusAndSendI:(id)arg1 ;
-(void)foregroundTimerFiredI:(id)arg1 ;
-(void)backgroundTimerFiredI:(id)arg1 ;
-(void)sendFirstPackagesI:(id)arg1 ;
-(void)addSessionCallbackParameterI:(id)arg1 key:(id)arg2 value:(id)arg3 ;
-(void)addSessionPartnerParameterI:(id)arg1 key:(id)arg2 value:(id)arg3 ;
-(void)removeSessionCallbackParameterI:(id)arg1 key:(id)arg2 ;
-(void)removeSessionPartnerParameterI:(id)arg1 key:(id)arg2 ;
-(void)resetSessionCallbackParametersI:(id)arg1 ;
-(void)resetSessionPartnerParametersI:(id)arg1 ;
-(void)removeNotificationObserver;
-(ADJTimerOnce *)backgroundTimer;
-(ADJTimerCycle *)foregroundTimer;
-(ADJTimerOnce *)delayStartTimer;
-(id<ADJPackageHandler>)packageHandler;
-(void)teardown:(BOOL)arg1 ;
-(void)teardownActivityStateS:(BOOL)arg1 ;
-(void)teardownAttributionS:(BOOL)arg1 ;
-(void)teardownAllSessionParametersS:(BOOL)arg1 ;
-(void)setPackageHandler:(id<ADJPackageHandler>)arg1 ;
-(void)setAttributionHandler:(id<ADJAttributionHandler>)arg1 ;
-(void)setSdkClickHandler:(id<ADJSdkClickHandler>)arg1 ;
-(void)setForegroundTimer:(ADJTimerCycle *)arg1 ;
-(void)setBackgroundTimer:(ADJTimerOnce *)arg1 ;
-(void)setDelayStartTimer:(ADJTimerOnce *)arg1 ;
-(void)setSessionParameters:(ADJSessionParameters *)arg1 ;
-(void)readSessionCallbackParametersI:(id)arg1 ;
-(void)readSessionPartnerParametersI:(id)arg1 ;
-(void)foregroundTimerFired;
-(void)backgroundTimerFired;
-(BOOL)toSendI:(id)arg1 sdkClickHandlerOnly:(BOOL)arg2 ;
-(BOOL)isToUpdatePackagesI:(id)arg1 ;
-(void)updatePackagesI:(id)arg1 ;
-(void)sessionParametersActionsI:(id)arg1 sessionParametersActionsArray:(id)arg2 ;
-(void)processSessionI:(id)arg1 ;
-(void)checkAttributionStateI:(id)arg1 ;
-(void)setActivityState:(ADJActivityState *)arg1 ;
-(void)transferSessionPackageI:(id)arg1 now:(double)arg2 ;
-(void)writeActivityStateI:(id)arg1 ;
-(ADJSessionParameters *)sessionParameters;
-(BOOL)checkActivityStateI:(id)arg1 ;
-(BOOL)toSendI:(id)arg1 ;
-(void)pauseSendingI:(id)arg1 ;
-(BOOL)updateActivityStateI:(id)arg1 now:(double)arg2 ;
-(BOOL)checkEventI:(id)arg1 event:(id)arg2 ;
-(BOOL)checkTransactionIdI:(id)arg1 transactionId:(id)arg2 ;
-(NSObject*<AdjustDelegate>)adjustDelegate;
-(BOOL)updateAttributionI:(id)arg1 attribution:(id)arg2 ;
-(void)prepareDeeplinkI:(id)arg1 responseData:(id)arg2 ;
-(void)writeAttributionI:(id)arg1 ;
-(BOOL)readDeeplinkQueryStringI:(id)arg1 queryString:(id)arg2 adjustDeepLinks:(id)arg3 attribution:(id)arg4 ;
-(BOOL)trySetAttributionDeeplink:(id)arg1 withKey:(id)arg2 withValue:(id)arg3 ;
-(void)resumeSendingI:(id)arg1 ;
-(void)writeSessionCallbackParametersI:(id)arg1 ;
-(void)writeSessionPartnerParametersI:(id)arg1 ;
-(void)finishedTracking:(id)arg1 ;
-(void)launchSessionResponseTasks:(id)arg1 ;
-(void)launchAttributionResponseTasks:(id)arg1 ;
-(void)appWillOpenUrl:(id)arg1 ;
-(void)setIadDate:(id)arg1 withPurchaseDate:(id)arg2 ;
-(void)setIadDetails:(id)arg1 error:(id)arg2 retriesLeft:(int)arg3 ;
-(BOOL)pausedI:(id)arg1 ;
-(void)setEnabled:(BOOL)arg1 ;
-(BOOL)isEnabled;
-(void)applicationDidBecomeActive;
-(void)applicationWillResignActive;
-(void)setAttribution:(ADJAttribution *)arg1 ;
-(ADJAttribution *)attribution;
-(id<ADJLogger>)logger;
-(void)setLogger:(id<ADJLogger>)arg1 ;
-(void)setOfflineMode:(BOOL)arg1 ;
-(ADJActivityState *)activityState;
-(void)setInternalState:(ADJInternalState *)arg1 ;
-(ADJInternalState *)internalState;
-(void)setDeviceInfo:(ADJDeviceInfo *)arg1 ;
-(ADJDeviceInfo *)deviceInfo;
-(NSObject*<OS_dispatch_queue>)internalQueue;
-(void)setInternalQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
@end

